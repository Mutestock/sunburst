# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import article_pb2 as article__pb2


class ArticleServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ReadArticleList = channel.unary_unary(
                '/article.ArticleService/ReadArticleList',
                request_serializer=article__pb2.ReadArticleListRequest.SerializeToString,
                response_deserializer=article__pb2.ReadArticleListResponse.FromString,
                )
        self.ReadArticleListBySearchterm = channel.unary_unary(
                '/article.ArticleService/ReadArticleListBySearchterm',
                request_serializer=article__pb2.ReadArticleListBySearchtermRequest.SerializeToString,
                response_deserializer=article__pb2.ReadArticleListBySearchtermResponse.FromString,
                )
        self.ReadArticleListBySite = channel.unary_unary(
                '/article.ArticleService/ReadArticleListBySite',
                request_serializer=article__pb2.ReadArticleListBySiteRequest.SerializeToString,
                response_deserializer=article__pb2.ReadArticleListBySiteResponse.FromString,
                )
        self.ReadArticleCountBySearchSite = channel.unary_unary(
                '/article.ArticleService/ReadArticleCountBySearchSite',
                request_serializer=article__pb2.ReadArticleCountBySearchSiteRequest.SerializeToString,
                response_deserializer=article__pb2.ReadArticleCountBySearchSiteResponse.FromString,
                )


class ArticleServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ReadArticleList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadArticleListBySearchterm(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadArticleListBySite(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadArticleCountBySearchSite(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ArticleServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ReadArticleList': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadArticleList,
                    request_deserializer=article__pb2.ReadArticleListRequest.FromString,
                    response_serializer=article__pb2.ReadArticleListResponse.SerializeToString,
            ),
            'ReadArticleListBySearchterm': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadArticleListBySearchterm,
                    request_deserializer=article__pb2.ReadArticleListBySearchtermRequest.FromString,
                    response_serializer=article__pb2.ReadArticleListBySearchtermResponse.SerializeToString,
            ),
            'ReadArticleListBySite': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadArticleListBySite,
                    request_deserializer=article__pb2.ReadArticleListBySiteRequest.FromString,
                    response_serializer=article__pb2.ReadArticleListBySiteResponse.SerializeToString,
            ),
            'ReadArticleCountBySearchSite': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadArticleCountBySearchSite,
                    request_deserializer=article__pb2.ReadArticleCountBySearchSiteRequest.FromString,
                    response_serializer=article__pb2.ReadArticleCountBySearchSiteResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'article.ArticleService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ArticleService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ReadArticleList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/article.ArticleService/ReadArticleList',
            article__pb2.ReadArticleListRequest.SerializeToString,
            article__pb2.ReadArticleListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadArticleListBySearchterm(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/article.ArticleService/ReadArticleListBySearchterm',
            article__pb2.ReadArticleListBySearchtermRequest.SerializeToString,
            article__pb2.ReadArticleListBySearchtermResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadArticleListBySite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/article.ArticleService/ReadArticleListBySite',
            article__pb2.ReadArticleListBySiteRequest.SerializeToString,
            article__pb2.ReadArticleListBySiteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadArticleCountBySearchSite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/article.ArticleService/ReadArticleCountBySearchSite',
            article__pb2.ReadArticleCountBySearchSiteRequest.SerializeToString,
            article__pb2.ReadArticleCountBySearchSiteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
